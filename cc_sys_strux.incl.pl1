declare RoomNumber                      binary(15) external initial(0);
declare RoomPtr                         pointer external; 
declare RoomPtrs(REGIONS_PER_PROCESS)   pointer external;
declare CapMonPtr                       pointer external; 
declare CapMonPtrs(REGIONS_PER_PROCESS) pointer external;

declare 1 RoomDBank                     based (RoomPtr),
          2  Region                     binary(31),
          2  Region_name                character(20),
          2  RoomQid                    binary(31),
          2  RoomBQid                   binary(31),
          2  last_noid                  binary(15),
          2  total_ghosts               binary(15),
          2  avatars_coming             binary(15),
          2  Pending                    pointer,
          2  waiting_list               pointer,
          2  flags,
             3 private                  bit(1),
             3 owner_here               bit(1),
             3 initialized              bit(1),
             3 noid_wrap                bit(1),
             3 refuse_entry             bit(1),
             3 filler_flags             bit(11),
          2  current_region,
             3 lighting                 binary(15),
             3 depth                    binary(15),
             3 neighbor(4)              binary(31),
             3 exit_type(4)             binary(15),
             3 restriction(4)           bit(1),
             3 nitty_bits(28)           bit(1),
             3 max_avatars              binary(15),
             3 owner                    binary(31),
             3 entry_proc               binary(15),
             3 exit_proc                binary(15),
             3 class_group              binary(15),
             3 orientation              binary(15),
             3 object_count             binary(15),
             3 space_usage              binary(15),
             3 town_dir                 character(1),
             3 port_dir                 character(1),
          2  oracle,
             3 object                   binary(15),
             3 person                   binary(15),
             3 control                  pointer,
          2  UserList(USERS_PER_REGION) pointer,
          2  ObjList(0:OBJECTS_PER_REGION) pointer,
          2  GhostList                  pointer,
          2  Block_addr                 pointer;

declare 1 RoomCMon                      based (CapMonPtr),
          2  class_ref_count(0:MAX_CLASS_NUMBER)      binary(15),
          2  resource_ref_count(NUMBER_OF_RESOURCES)  binary(15);

declare 1 Memory_Block                  based,
          2  free                       bit(64),
          2  entry(64)                  char(40);

declare 1 Class_Table(0:255) external %include 'struct_class';

declare  current_noid                   binary (15) external;
declare  current_request                binary (15) external;
declare  current_header                 char(1) external;
declare  current_qid                    binary (31) external;
declare  selfptr                        pointer external initial(null());
declare  avatarptr                      pointer external initial(null());
declare  userptr                        pointer external initial(null());

declare 1 avatar based(avatarptr)       %include 'struct_avatar.incl.pl1';
declare 1 self based(selfptr)           %include 'struct_gen_object.incl.pl1';
declare 1 player based                  %include 'struct_user.incl.pl1';

declare 1 object based                  %include 'instance_head.incl.pl1';,
         2 param1 pointer,                /* to contents list    */
         2 param2 char(1);                /* depends on class    */

declare request_string   char(646) var external;
declare request(646)     char(1)   defined(request_string);

%replace MAX_EntryDaemon        by 2;
%replace MAX_ExitDaemon         by 0;
declare 1 Daemons(1:5)          external,
          2 EntryRoutine        entry,
          2 ExitRoutine         entry;

declare element(0:20)    bin(15) based;   /* content elements array */

declare behavior(0:255)  entry     based;

declare 1 instance_head based      %include 'instance_head';;

declare DayNight         bin(15) external initial(0);
declare Holes_open       bin(31) external;

declare put_success      bit(1) aligned external;
declare throw_success    bit(1) aligned external;

declare COLLISION_ON bit(1) external init('1'b);
declare ADJACENCY_ON bit(1) external init('1'b);

declare BUGON        bit(1) external init('0'b);

declare fan_cnt                         binary(15) external;
declare fan_list(USERS_PER_REGION+200)  pointer external;  /* + 200 ghosts */

declare 1 now_in    external,
          2 last    bin(31)        initial(0),
          2 count   bin(15)        initial(0),
          2 line    (4) char(40) var;

/*  The following 2 structs are used with RoomDBank.waiting_list to remember  *
 *  (1) all user and login info when waiting for the region to be initialized *
 *  and (2) all user info when a user has been given permission to change to  *
 *  the region, but we are waiting for the description of the user and the    *
 *  objects being carried.                                                    */

declare 1 enter_info  based,              /* Info for later retry */
          2 type         binary(15),         /* 1 => waiting for region init */
          2 room         binary(31),
          2 user         binary(31),
          2 que          binary(31),
          2 qc_name      char(10),
          2 qc_hold      char(28),
          2 params       char(254) var;
declare 1 mug_shot    based,              /* Info for backing out if needed */
          2 type         binary(15),         /* 2 => waiting user's description */
          2 user         binary(31),
          2 que          binary(31),
          2 mail         binary(15),
          2 obj_cnt      binary(15),
          2 obj_class(9) binary(15),
          2 obj_pos(9)   binary(15);

declare 1 fountain  based,
          2 type         binary(15),
          2 which_room   binary(15),
          2 start_time   binary(31),
          2 end_time     binary(31),
          2 interval     binary(31),
          2 msg_text     char(100) var;
